#!/bin/bash

start_time=$(date +%s)
interval=5

function getReadBytes() {
	grep -s "read_bytes" "/proc/$1/io" | awk '{print $2}'
}

function parseAll() {
	for pid in $(ls /proc | grep -E '^[0-9]+$')
	do
		read_bytes=$(getReadBytes $pid)
		echo "$pid $read_bytes"
	done
}

temp=$(mktemp)

parseAll > "$temp"

while true
do
	current_time=$(date +%s)
	delta_time=$((current_time - start_time))

	if [[ $delta_time -ge $interval ]]
	then
		break
	fi

	sleep 1
done

parseAll >> "$temp"

temp2=$(mktemp)

sort -k1 -n $temp |
awk 'NF > 1' > $temp2

prev_pid=-1
prev_bytes=-1
while read line
do
	pid=$(echo $line | awk '{print $1}')
	bytes=$(echo $line | awk '{print $2}')

	if [[ $prev_pid != $pid ]]
	then
		prev_pid=$pid
		prev_bytes=$bytes
	else
		diff=$(echo "scale=2; $bytes - $prev_bytes" | bc)
		echo "$pid:$diff"
	fi
done < $temp2 > output7.txt

rm $temp
rm $temp2

